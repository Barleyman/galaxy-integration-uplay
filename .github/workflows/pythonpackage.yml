name: Python package
on:
  workflow_run:
    workflows: ["Update release version"]
    types:
      - completed
  push:
    branches: [ master ]
  pull_request:
    branches: [ master, dev ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macOS-latest, windows-latest]

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        repository: ${{ github.event.pull_request.head.repo.full_name }}
        ref: ${{ github.event.pull_request.head.ref }}

    - name: Display Python version
      run: python -c "import sys; print(sys.version)"
    
    - name: Build plugin
      uses: GOG-Nebula/action-build-plugin@feat/simple_composite_action
      with:
        target: ./build

    - name: Create zip archive
      shell: bash
      env:
        ZIP_NAME: uplay_${{ runner.os }}_afb5a69c-b2ee-4d58-b916-f4cd75d4999a
      run: |
        7z a ${ZIP_NAME}.zip ./build/*

    - name: get version
      id: version
      uses: notiz-dev/github-action-json-property@release
      with: 
        path: 'build/manifest.json'
        prop_path: 'version'
  
    - name: Upload result
      uses: actions/upload-artifact@v1
      with:
        name: uplay_${{ runner.os }}_${{steps.version.outputs.prop}}
        path: uplay_${{ runner.os }}_afb5a69c-b2ee-4d58-b916-f4cd75d4999a.zip
    
    # - name: Automatic Releases
    #   uses: marvinpinto/action-automatic-releases@latest
    #   with:
    #     # GitHub secret token
    #     repo_token: ${{ secrets.GITHUB_TOKEN }}
    #     # Git tag (for automatic releases)
    #     automatic_release_tag: early_release_${{steps.version.outputs.prop}}
    #     # Should this release be marked as a pre-release?
    #     prerelease: True
    #     # Release title (for automatic releases)
    #     title: early_release_${{steps.version.outputs.prop}}
    #     # Assets to upload to the release
    #     files: uplay_win_afb5a69c-b2ee-4d58-b916-f4cd75d4999a.zip
